openapi: 3.0.3
info:
  title: In-Memory DB API
  version: 1.0.0
paths:
  /api/v1/set:
    post:
      summary: Set a key-value pair
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRowRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
        '400':
          description: Bad request
  /api/v1/get/{key}:
    get:
      summary: Get value by key
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowResponse'
        '404':
          description: Not found
  /api/v1/remove/{key}:
    delete:
      summary: Remove key from store
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
        '404':
          description: Not found
  /api/v1/update/{key}:
    put:
      summary: Update existing key
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRowRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OKResponse'
        '404':
          description: Not found
  /api/v1/push/{key}:
    post:
      summary: Push item to list
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushItemToSliceRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowResponse'
        '404':
          description: Not found
  /api/v1/pop/{key}:
    post:
      summary: Pop item from list
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowResponse'
        '404':
          description: Not found

components:
  schemas:
    OKResponse:
      type: object
      properties:
        message:
          type: string
          example: ok
    SetRowRequest:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
        value:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        ttl:
          type: string
          example: "5m"
    UpdateRowRequest:
      type: object
      required:
        - value
      properties:
        value:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        ttl:
          type: string
          example: "10m"
    PushItemToSliceRequest:
      type: object
      required:
        - value
      properties:
        value:
          type: string
        ttl:
          type: string
          example: "2m"
    RowResponse:
      type: object
      properties:
        key:
          type: string
        value:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        kind:
          type: string
          enum: [string, string_slice]
        ttl:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
